===== Основы семантики HTML. Введение

В предыдущей теме вы создали сайт-портфолио. Он получился понятным и удобным для посетителей.

Но кроме пользователей с сайтом контактируют поисковые роботы и браузеры. Чтобы правильно «понять» сайт, им нужна дополнительная служебная информация. Она хранится в специальных тегах.

Семантические теги показывают, какая информация в них находится: навигация, шапка и подвал сайта, блоки с основной и косвенной информацией. Это даёт возможность слабовидящим пользоваться вашим сайтом, потому что программы, переводящие текст в аудио, руководствуются семантикой тегов.

Вам предстоит внедрить улучшения: превращать разметку в семантическую, сообщать о своём сайте поисковикам, размечать код для работы над ним в команде. В общем: если в прошлой теме вы впечатляли пользователей, то теперь вам предстоит впечатлить куда более избирательную публику — поисковые машины, браузеры и разработчиков.

===== Описание сайта для браузеров и поисковых машин
Мы уже говорили, что в head описывают правила, по которым браузер работает с веб-страницей. Мы разобрали три таких правила:
  <meta charset="utf-8"> — определяет кодировку страницы;
  <title></title> — задаёт имя во вкладке браузера;
  <link rel="shortcut icon" href="favicon.ico"> — задаёт изображение во вкладке браузера.
Расширим этот список и наполним head дополнительной информацией. Но прежде разберёмся, как устроены метатеги.

  <meta name="author" content="Василий">

Название элемента meta сообщает браузеру о смысле тега. Атрибут name **определяет назначение метатега. Атрибут content **содержит саму инструкцию.

Сайт могут открывать с разных устройств: компьютеров, планшетов или телефонов. Все эти устройства обладают разными экранами и разрешением. Такое обилие устройств с различными разрешениями экрана вынуждает нас следить за поведением страницы на разных экранах. Поэтому важно прописывать метатег <meta name="viewport" content="">. Этот метатег определяет поведение страницы в зависимости от размера дисплея.

Значение viewport сообщает браузеру, как выглядит видимая пользователю область страницы. Если этот метатег не указывать, сайт может отображаться по-разному на разных устройствах. Где-то всё будет работать хорошо, а где-то — нет. Поэтому лучше всегда прописывать этот метатег.

Укажем инструкции в атрибуте content:
<meta name="viewport" content="width=device-width, initial-scale=1">

Здесь две инструкции:
  width=device-width означает «занимать всю ширину экрана»;
  initial-scale=1 — что страница на любом устройстве должна отображаться в масштабе 1:1, то есть не масштабироваться при загрузке.

Метатеги для поисковиков

Также есть метатеги для поисковых машин: вроде Гугла и Яндекса. Алгоритмы поиска опираются на значения определённых метатегов. Поэтому, чтобы сайт был показан именно тем пользователям, которые им интересуются, следует эти метатеги прописывать.

Есть три метатега для поисковиков: описание сайта, его авторы и ключевые слова.

Описание контента прописывают в метатеге description. Он содержит небольшой текст — около абзаца — рассказывающий, чему посвящён сайт.

Автора или авторов сайта указывают в метатегах author. Обратите внимание: в один метатег meta name="author" вписывается имя одного автора.

Также есть метатег keywords — в нём прописывают ключевые слова сайта.

Значение атрибута content в этих метатегах указывается в свободной форме на основном языке сайта:
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="Страница про различные веб-технологии">
  <meta name="keywords" content="HTML5, CSS">
  <meta name="author" content="Василий Петров">
  <meta name="author" content="Петр Васильев">
  
Мы указали самые необходимые метатеги, но их ещё много. Для управления отображением ссылки при «шеринге» в соцсетях есть свои метатеги; для настройки систем аналитики — свои. Пока это всё знать необязательно, но по мере роста разработчика, ему нужно всё больше метатегов. Может наступить момент, когда раздел head вашего сайта станет больше, чем раздел body.

===== Разнообразие контейнеров HTML5

До сих пор мы структурировали страницу только контейнером div. Это традиционный и самый популярный блочный тег. Но есть и другие блоки для структурирования.

В стандарте HTML5 есть целое семейство контейнеров — семантических тегов. Визуально они не отличаются от div, но обладают скрытыми преимуществами. Если применять семантические теги:
- поисковым машинам будет проще прочитать и понять содержимое сайта,
- страница станет доступной для слабовидящих,
- код будет понятнее другим разработчикам.

Семантические теги размечают страницу с учётом смысла контента. По ним браузер отличает контент, «шапку» и «подвал» (колонтитулы), навигацию. Самые распространённые семантические контейнеры:
  <header></header> — шапка сайта;
  <footer></footer> — подвал;
  <nav></nav> — блок меню (от англ. navigation, навигация);
  <main></main> — основное содержимое страницы; на многостраничных сайтах этот контейнер содержит всё, чем данная страница отличается от остальных. Имя тега по-английски означает «главный».
  <section></section> — организует несколько блоков в близкие по смыслу секции.

После преобразования всех div обратите внимание, насколько более читаемым станет ваш код. С первого взгляда на любой блок ясно, для чего он предназначен, в чём смысл его контента, где здесь меню и где «подвал». Это называется «семантика», то есть смысловое, семантическое деление кода.